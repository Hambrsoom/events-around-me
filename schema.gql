# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Address {
  appartmentNumber: Float!
  id: ID!
  street: String!
  zipCode: String!
}

input AddressInput {
  appartmentNumber: Float
  id: Float
  street: String
  zipCode: String
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Event {
  address: Address!
  date: DateTime!
  id: ID!
  organizer: Organization!
  title: String!
  url: String!
}

input EventInput {
  address: AddressInput!
  date: DateTime
  id: Float
  organizerID: Float!
  title: String!
  url: String!
}

type LoginResponse {
  accessToken: String!
}

type Mutation {
  Login(password: String!, username: String!): LoginResponse!
  Register(password: String!, username: String!): Boolean!
  addEvent(event: EventInput!): Event!
  addOrganization(Organization: OrganizationInput!): Organization!
  editEvent(Event: EventInput!): Event!
  editOrganization(Organization: OrganizationInput!): Organization!
}

type Organization {
  address: Address!
  events: [Event!]!
  id: ID!
  name: String!
  url: String!
}

input OrganizationInput {
  addressInput: AddressInput
  id: ID
  name: String
  url: String
}

type Query {
  getAllEvents: [Event!]!
  getAllEventsForOrganization(OrganizationID: Float!): [Event!]!
  getEventByID(id: Float!): Event!
  getOrganizationByID(id: Float!): Organization!
  getOrganizations: [Organization!]!
}
